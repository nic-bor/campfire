{"id":"../node_modules/mux.js/lib/codecs/adts.js","dependencies":[{"name":"/home/nico/src/campfire/assets/package.json","includedInParent":true,"mtime":1568330653753},{"name":"/home/nico/src/campfire/assets/.babelrc","includedInParent":true,"mtime":1568069024188},{"name":"/home/nico/src/campfire/assets/node_modules/mux.js/package.json","includedInParent":true,"mtime":1568150067788},{"name":"../utils/stream.js","loc":{"line":9,"column":21},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/codecs/adts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/utils/stream.js"}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mux.js/lib/codecs/adts.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}}],"sources":{"../node_modules/mux.js/lib/codecs/adts.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n"},"lineCount":139}},"error":null,"hash":"1d98b9674c9532caf989943a2d6f2326","cacheData":{"env":{}}}