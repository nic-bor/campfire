{"id":"../node_modules/mux.js/lib/mp4/transmuxer.js","dependencies":[{"name":"/home/nico/src/campfire/assets/package.json","includedInParent":true,"mtime":1568330653753},{"name":"/home/nico/src/campfire/assets/.babelrc","includedInParent":true,"mtime":1568069024188},{"name":"/home/nico/src/campfire/assets/node_modules/mux.js/package.json","includedInParent":true,"mtime":1568150067788},{"name":"../utils/stream.js","loc":{"line":13,"column":21},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/utils/stream.js"},{"name":"./mp4-generator.js","loc":{"line":14,"column":18},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/mp4-generator.js"},{"name":"./frame-utils","loc":{"line":15,"column":25},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/frame-utils.js"},{"name":"./audio-frame-utils","loc":{"line":16,"column":30},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/audio-frame-utils.js"},{"name":"./track-decode-info","loc":{"line":17,"column":30},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/track-decode-info.js"},{"name":"../m2ts/m2ts.js","loc":{"line":18,"column":19},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js"},{"name":"../codecs/adts.js","loc":{"line":19,"column":25},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/codecs/adts.js"},{"name":"../codecs/h264","loc":{"line":20,"column":25},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/codecs/h264.js"},{"name":"../aac","loc":{"line":21,"column":24},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/aac/index.js"},{"name":"../aac/utils","loc":{"line":22,"column":30},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/mp4/transmuxer.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/aac/utils.js"}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/transmuxer.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}}],"sources":{"../node_modules/mux.js/lib/mp4/transmuxer.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n"},"lineCount":1102}},"error":null,"hash":"46217faec6a8bf74d070ac3156dde189","cacheData":{"env":{}}}