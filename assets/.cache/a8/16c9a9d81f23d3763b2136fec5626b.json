{"id":"../node_modules/mux.js/lib/utils/exp-golomb.js","dependencies":[{"name":"/home/nico/src/campfire/assets/package.json","includedInParent":true,"mtime":1568330653753},{"name":"/home/nico/src/campfire/assets/.babelrc","includedInParent":true,"mtime":1568069024188},{"name":"/home/nico/src/campfire/assets/node_modules/mux.js/package.json","includedInParent":true,"mtime":1568150067788}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mux.js/lib/utils/exp-golomb.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"../node_modules/mux.js/lib/utils/exp-golomb.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n"},"lineCount":154}},"error":null,"hash":"de7030c4e2ff44c51520b39c01229af4","cacheData":{"env":{}}}