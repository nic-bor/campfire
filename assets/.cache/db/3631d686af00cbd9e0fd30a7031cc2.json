{"id":"../node_modules/mux.js/lib/mp4/track-decode-info.js","dependencies":[{"name":"/home/nico/src/campfire/assets/package.json","includedInParent":true,"mtime":1568330653753},{"name":"/home/nico/src/campfire/assets/.babelrc","includedInParent":true,"mtime":1568069024188},{"name":"/home/nico/src/campfire/assets/node_modules/mux.js/package.json","includedInParent":true,"mtime":1568150067788}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mux.js/lib/mp4/track-decode-info.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"../node_modules/mux.js/lib/mp4/track-decode-info.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n"},"lineCount":108}},"error":null,"hash":"c3391c8208d37cb37e0e51d8aa1eaa17","cacheData":{"env":{}}}