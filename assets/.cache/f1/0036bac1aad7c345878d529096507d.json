{"id":"../node_modules/mux.js/lib/m2ts/m2ts.js","dependencies":[{"name":"/home/nico/src/campfire/assets/package.json","includedInParent":true,"mtime":1568330653753},{"name":"/home/nico/src/campfire/assets/.babelrc","includedInParent":true,"mtime":1568069024188},{"name":"/home/nico/src/campfire/assets/node_modules/mux.js/package.json","includedInParent":true,"mtime":1568150067788},{"name":"../utils/stream.js","loc":{"line":12,"column":21},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/utils/stream.js"},{"name":"./caption-stream","loc":{"line":13,"column":26},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/caption-stream.js"},{"name":"./stream-types","loc":{"line":14,"column":24},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/stream-types.js"},{"name":"./timestamp-rollover-stream","loc":{"line":15,"column":36},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js"},{"name":"./stream-types.js","loc":{"line":17,"column":30},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/stream-types.js"},{"name":"./metadata-stream","loc":{"line":510,"column":26},"parent":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/m2ts.js","resolved":"/home/nico/src/campfire/assets/node_modules/mux.js/lib/m2ts/metadata-stream.js"}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mux.js/lib/m2ts/m2ts.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}}],"sources":{"../node_modules/mux.js/lib/m2ts/m2ts.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n"},"lineCount":520}},"error":null,"hash":"099c1654acd21badddeda78bc43334c1","cacheData":{"env":{}}}